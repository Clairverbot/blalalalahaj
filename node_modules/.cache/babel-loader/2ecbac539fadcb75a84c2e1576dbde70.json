{"ast":null,"code":"'use strict';\n\nconsole.log('WebAudioFont Player v2.82 GPL3');\n\nvar WebAudioFontLoader = require('./loader');\n\nvar WebAudioFontChannel = require('./channel');\n\nvar WebAudioFontReverberator = require('./reverberator');\n\nfunction WebAudioFontPlayer() {\n  this.envelopes = [];\n  this.loader = new WebAudioFontLoader(this);\n  this.onCacheFinish = null;\n  this.onCacheProgress = null;\n  this.afterTime = 0.05;\n  this.nearZero = 0.000001;\n\n  this.createChannel = function (audioContext) {\n    return new WebAudioFontChannel(audioContext);\n  };\n\n  this.createReverberator = function (audioContext) {\n    return new WebAudioFontReverberator(audioContext);\n  };\n\n  this.limitVolume = function (volume) {\n    if (volume) {\n      volume = 1.0 * volume;\n    } else {\n      volume = 0.5;\n    }\n\n    return volume;\n  };\n\n  this.queueChord = function (audioContext, target, preset, when, pitches, duration, volume, slides) {\n    volume = this.limitVolume(volume);\n\n    for (var i = 0; i < pitches.length; i++) {\n      this.queueWaveTable(audioContext, target, preset, when, pitches[i], duration, volume - Math.random() * 0.01, slides);\n    }\n  };\n\n  this.queueStrumUp = function (audioContext, target, preset, when, pitches, duration, volume, slides) {\n    pitches.sort(function (a, b) {\n      return b - a;\n    });\n    this.queueStrum(audioContext, target, preset, when, pitches, duration, volume, slides);\n  };\n\n  this.queueStrumDown = function (audioContext, target, preset, when, pitches, duration, volume, slides) {\n    pitches.sort(function (a, b) {\n      return a - b;\n    });\n    this.queueStrum(audioContext, target, preset, when, pitches, duration, volume, slides);\n  };\n\n  this.queueStrum = function (audioContext, target, preset, when, pitches, duration, volume, slides) {\n    volume = this.limitVolume(volume);\n\n    if (when < audioContext.currentTime) {\n      when = audioContext.currentTime;\n    }\n\n    for (var i = 0; i < pitches.length; i++) {\n      this.queueWaveTable(audioContext, target, preset, when + i * 0.01, pitches[i], duration, volume - Math.random() * 0.01, slides);\n      volume = 0.9 * volume;\n    }\n  };\n\n  this.queueSnap = function (audioContext, target, preset, when, pitches, duration, volume, slides) {\n    volume = this.limitVolume(volume);\n    volume = 1.5 * (volume || 1.0);\n    duration = 0.05;\n    this.queueChord(audioContext, target, preset, when, pitches, duration, volume, slides);\n  };\n\n  this.resumeContext = function (audioContext) {\n    try {\n      if (audioContext.state == 'suspended') {\n        if (audioContext.constructor.name == 'AudioContext') {\n          console.log('audioContext.resume', audioContext);\n          audioContext.resume();\n        } else {//skip\n        }\n      }\n    } catch (e) {//don't care\n    }\n  };\n\n  this.queueWaveTable = function (audioContext, target, preset, when, pitch, duration, volume, slides) {\n    this.resumeContext(audioContext);\n    volume = this.limitVolume(volume);\n    var zone = this.findZone(audioContext, preset, pitch);\n\n    if (!zone.buffer) {\n      console.log('empty buffer ', zone);\n      return;\n    }\n\n    var baseDetune = zone.originalPitch - 100.0 * zone.coarseTune - zone.fineTune;\n    var playbackRate = 1.0 * Math.pow(2, (100.0 * pitch - baseDetune) / 1200.0);\n    var sampleRatio = zone.sampleRate / audioContext.sampleRate;\n    var startWhen = when;\n\n    if (startWhen < audioContext.currentTime) {\n      startWhen = audioContext.currentTime;\n    }\n\n    var waveDuration = duration + this.afterTime;\n    var loop = true;\n\n    if (zone.loopStart < 1 || zone.loopStart >= zone.loopEnd) {\n      loop = false;\n    }\n\n    if (!loop) {\n      if (waveDuration > zone.buffer.duration / playbackRate) {\n        waveDuration = zone.buffer.duration / playbackRate;\n      }\n    }\n\n    var envelope = this.findEnvelope(audioContext, target, startWhen, waveDuration);\n    this.setupEnvelope(audioContext, envelope, zone, volume, startWhen, waveDuration, duration);\n    envelope.audioBufferSourceNode = audioContext.createBufferSource();\n    envelope.audioBufferSourceNode.playbackRate.setValueAtTime(playbackRate, 0);\n\n    if (slides) {\n      if (slides.length > 0) {\n        envelope.audioBufferSourceNode.playbackRate.setValueAtTime(playbackRate, when);\n\n        for (var i = 0; i < slides.length; i++) {\n          var newPlaybackRate = 1.0 * Math.pow(2, (100.0 * slides[i].pitch - baseDetune) / 1200.0);\n          var newWhen = when + slides[i].when;\n          envelope.audioBufferSourceNode.playbackRate.linearRampToValueAtTime(newPlaybackRate, newWhen);\n        }\n      }\n    }\n\n    envelope.audioBufferSourceNode.buffer = zone.buffer;\n\n    if (loop) {\n      envelope.audioBufferSourceNode.loop = true;\n      envelope.audioBufferSourceNode.loopStart = zone.loopStart / zone.sampleRate + zone.delay;\n      envelope.audioBufferSourceNode.loopEnd = zone.loopEnd / zone.sampleRate + zone.delay;\n    } else {\n      envelope.audioBufferSourceNode.loop = false;\n    }\n\n    envelope.audioBufferSourceNode.connect(envelope);\n    envelope.audioBufferSourceNode.start(startWhen, zone.delay);\n    envelope.audioBufferSourceNode.stop(startWhen + waveDuration);\n    envelope.when = startWhen;\n    envelope.duration = waveDuration;\n    envelope.pitch = pitch;\n    envelope.preset = preset;\n    return envelope;\n  };\n\n  this.noZeroVolume = function (n) {\n    if (n > this.nearZero) {\n      return n;\n    } else {\n      return this.nearZero;\n    }\n  };\n\n  this.setupEnvelope = function (audioContext, envelope, zone, volume, when, sampleDuration, noteDuration) {\n    envelope.gain.setValueAtTime(this.noZeroVolume(0), audioContext.currentTime);\n    var lastTime = 0;\n    var lastVolume = 0;\n    var duration = noteDuration;\n    var ahdsr = zone.ahdsr;\n\n    if (sampleDuration < duration + this.afterTime) {\n      duration = sampleDuration - this.afterTime;\n    }\n\n    if (ahdsr) {\n      if (!(ahdsr.length > 0)) {\n        ahdsr = [{\n          duration: 0,\n          volume: 1\n        }, {\n          duration: 0.5,\n          volume: 1\n        }, {\n          duration: 1.5,\n          volume: 0.5\n        }, {\n          duration: 3,\n          volume: 0\n        }];\n      }\n    } else {\n      ahdsr = [{\n        duration: 0,\n        volume: 1\n      }, {\n        duration: duration,\n        volume: 1\n      }];\n    }\n\n    envelope.gain.cancelScheduledValues(when);\n    envelope.gain.setValueAtTime(this.noZeroVolume(ahdsr[0].volume * volume), when);\n\n    for (var i = 0; i < ahdsr.length; i++) {\n      if (ahdsr[i].duration > 0) {\n        if (ahdsr[i].duration + lastTime > duration) {\n          var r = 1 - (ahdsr[i].duration + lastTime - duration) / ahdsr[i].duration;\n          var n = lastVolume - r * (lastVolume - ahdsr[i].volume);\n          envelope.gain.linearRampToValueAtTime(this.noZeroVolume(volume * n), when + duration);\n          break;\n        }\n\n        lastTime = lastTime + ahdsr[i].duration;\n        lastVolume = ahdsr[i].volume;\n        envelope.gain.linearRampToValueAtTime(this.noZeroVolume(volume * lastVolume), when + lastTime);\n      }\n    }\n\n    envelope.gain.linearRampToValueAtTime(this.noZeroVolume(0), when + duration + this.afterTime);\n  };\n\n  this.numValue = function (aValue, defValue) {\n    if (typeof aValue === \"number\") {\n      return aValue;\n    } else {\n      return defValue;\n    }\n  };\n\n  this.findEnvelope = function (audioContext, target, when, duration) {\n    var envelope = null;\n\n    for (var i = 0; i < this.envelopes.length; i++) {\n      var e = this.envelopes[i];\n\n      if (e.target == target && audioContext.currentTime > e.when + e.duration + 0.001) {\n        try {\n          e.audioBufferSourceNode.disconnect();\n          e.audioBufferSourceNode.stop(0);\n          e.audioBufferSourceNode = null;\n        } catch (x) {//audioBufferSourceNode is dead already\n        }\n\n        envelope = e;\n        break;\n      }\n    }\n\n    if (!envelope) {\n      envelope = audioContext.createGain();\n      envelope.target = target;\n      envelope.connect(target);\n\n      envelope.cancel = function () {\n        if (envelope.when + envelope.duration > audioContext.currentTime) {\n          envelope.gain.cancelScheduledValues(0);\n          envelope.gain.setTargetAtTime(0.00001, audioContext.currentTime, 0.1);\n          envelope.when = audioContext.currentTime + 0.00001;\n          envelope.duration = 0;\n        }\n      };\n\n      this.envelopes.push(envelope);\n    }\n\n    return envelope;\n  };\n\n  this.adjustPreset = function (audioContext, preset) {\n    for (var i = 0; i < preset.zones.length; i++) {\n      this.adjustZone(audioContext, preset.zones[i]);\n    }\n  };\n\n  this.adjustZone = function (audioContext, zone) {\n    if (zone.buffer) {//\n    } else {\n      zone.delay = 0;\n\n      if (zone.sample) {\n        var decoded = atob(zone.sample);\n        zone.buffer = audioContext.createBuffer(1, decoded.length / 2, zone.sampleRate);\n        var float32Array = zone.buffer.getChannelData(0);\n        var b1, b2, n;\n\n        for (var i = 0; i < decoded.length / 2; i++) {\n          b1 = decoded.charCodeAt(i * 2);\n          b2 = decoded.charCodeAt(i * 2 + 1);\n\n          if (b1 < 0) {\n            b1 = 256 + b1;\n          }\n\n          if (b2 < 0) {\n            b2 = 256 + b2;\n          }\n\n          n = b2 * 256 + b1;\n\n          if (n >= 65536 / 2) {\n            n = n - 65536;\n          }\n\n          float32Array[i] = n / 65536.0;\n        }\n      } else {\n        if (zone.file) {\n          var datalen = zone.file.length;\n          var arraybuffer = new ArrayBuffer(datalen);\n          var view = new Uint8Array(arraybuffer);\n          var decoded = atob(zone.file);\n          var b;\n\n          for (var i = 0; i < decoded.length; i++) {\n            b = decoded.charCodeAt(i);\n            view[i] = b;\n          }\n\n          audioContext.decodeAudioData(arraybuffer, function (audioBuffer) {\n            zone.buffer = audioBuffer;\n          });\n        }\n      }\n\n      zone.loopStart = this.numValue(zone.loopStart, 0);\n      zone.loopEnd = this.numValue(zone.loopEnd, 0);\n      zone.coarseTune = this.numValue(zone.coarseTune, 0);\n      zone.fineTune = this.numValue(zone.fineTune, 0);\n      zone.originalPitch = this.numValue(zone.originalPitch, 6000);\n      zone.sampleRate = this.numValue(zone.sampleRate, 44100);\n      zone.sustain = this.numValue(zone.originalPitch, 0);\n    }\n  };\n\n  this.findZone = function (audioContext, preset, pitch) {\n    var zone = null;\n\n    for (var i = preset.zones.length - 1; i >= 0; i--) {\n      zone = preset.zones[i];\n\n      if (zone.keyRangeLow <= pitch && zone.keyRangeHigh + 1 >= pitch) {\n        break;\n      }\n    }\n\n    try {\n      this.adjustZone(audioContext, zone);\n    } catch (ex) {\n      console.log('adjustZone', ex);\n    }\n\n    return zone;\n  };\n\n  this.cancelQueue = function (audioContext) {\n    for (var i = 0; i < this.envelopes.length; i++) {\n      var e = this.envelopes[i];\n      e.gain.cancelScheduledValues(0);\n      e.gain.setValueAtTime(this.nearZero, audioContext.currentTime);\n      e.when = -1;\n\n      try {\n        e.audioBufferSourceNode.disconnect();\n      } catch (ex) {\n        console.log(ex);\n      }\n    }\n  };\n\n  return this;\n}\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = WebAudioFontPlayer;\n}\n\nif (typeof window !== 'undefined') {\n  window.WebAudioFontPlayer = WebAudioFontPlayer;\n}","map":{"version":3,"sources":["/Users/claire/Documents/blalalalahaj/node_modules/webaudiofont/npm/src/player.js"],"names":["console","log","WebAudioFontLoader","require","WebAudioFontChannel","WebAudioFontReverberator","WebAudioFontPlayer","envelopes","loader","onCacheFinish","onCacheProgress","afterTime","nearZero","createChannel","audioContext","createReverberator","limitVolume","volume","queueChord","target","preset","when","pitches","duration","slides","i","length","queueWaveTable","Math","random","queueStrumUp","sort","a","b","queueStrum","queueStrumDown","currentTime","queueSnap","resumeContext","state","constructor","name","resume","e","pitch","zone","findZone","buffer","baseDetune","originalPitch","coarseTune","fineTune","playbackRate","pow","sampleRatio","sampleRate","startWhen","waveDuration","loop","loopStart","loopEnd","envelope","findEnvelope","setupEnvelope","audioBufferSourceNode","createBufferSource","setValueAtTime","newPlaybackRate","newWhen","linearRampToValueAtTime","delay","connect","start","stop","noZeroVolume","n","sampleDuration","noteDuration","gain","lastTime","lastVolume","ahdsr","cancelScheduledValues","r","numValue","aValue","defValue","disconnect","x","createGain","cancel","setTargetAtTime","push","adjustPreset","zones","adjustZone","sample","decoded","atob","createBuffer","float32Array","getChannelData","b1","b2","charCodeAt","file","datalen","arraybuffer","ArrayBuffer","view","Uint8Array","decodeAudioData","audioBuffer","sustain","keyRangeLow","keyRangeHigh","ex","cancelQueue","module","exports","window"],"mappings":"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","sourcesContent":["'use strict'\r\nconsole.log('WebAudioFont Player v2.82 GPL3');\r\nvar WebAudioFontLoader = require('./loader');\r\nvar WebAudioFontChannel = require('./channel');\r\nvar WebAudioFontReverberator = require('./reverberator')\r\nfunction WebAudioFontPlayer() {\r\n\tthis.envelopes = [];\r\n\tthis.loader = new WebAudioFontLoader(this);\r\n\tthis.onCacheFinish = null;\r\n\tthis.onCacheProgress = null;\r\n\tthis.afterTime = 0.05;\r\n\tthis.nearZero = 0.000001;\r\n\tthis.createChannel = function (audioContext) {\r\n\t\treturn new WebAudioFontChannel(audioContext);\r\n\t};\r\n\tthis.createReverberator = function (audioContext) {\r\n\t\treturn new WebAudioFontReverberator(audioContext);\r\n\t};\r\n\tthis.limitVolume = function (volume) {\r\n\t\tif (volume) {\r\n\t\t\tvolume = 1.0 * volume;\r\n\t\t} else {\r\n\t\t\tvolume = 0.5;\r\n\t\t}\r\n\t\treturn volume;\r\n\t};\r\n\tthis.queueChord = function (audioContext, target, preset, when, pitches, duration, volume, slides) {\r\n\t\tvolume = this.limitVolume(volume);\r\n\t\tfor (var i = 0; i < pitches.length; i++) {\r\n\t\t\tthis.queueWaveTable(audioContext, target, preset, when, pitches[i], duration, volume - Math.random() * 0.01, slides);\r\n\t\t}\r\n\t};\r\n\tthis.queueStrumUp = function (audioContext, target, preset, when, pitches, duration, volume, slides) {\r\n\t\tpitches.sort(function (a, b) {\r\n\t\t\treturn b - a;\r\n\t\t});\r\n\t\tthis.queueStrum(audioContext, target, preset, when, pitches, duration, volume, slides);\r\n\t};\r\n\tthis.queueStrumDown = function (audioContext, target, preset, when, pitches, duration, volume, slides) {\r\n\t\tpitches.sort(function (a, b) {\r\n\t\t\treturn a - b;\r\n\t\t});\r\n\t\tthis.queueStrum(audioContext, target, preset, when, pitches, duration, volume, slides);\r\n\t};\r\n\tthis.queueStrum = function (audioContext, target, preset, when, pitches, duration, volume, slides) {\r\n\t\tvolume = this.limitVolume(volume);\r\n\t\tif (when < audioContext.currentTime) {\r\n\t\t\twhen = audioContext.currentTime;\r\n\t\t}\r\n\t\tfor (var i = 0; i < pitches.length; i++) {\r\n\t\t\tthis.queueWaveTable(audioContext, target, preset, when + i * 0.01, pitches[i], duration, volume - Math.random() * 0.01, slides);\r\n\t\t\tvolume = 0.9 * volume;\r\n\t\t}\r\n\t};\r\n\tthis.queueSnap = function (audioContext, target, preset, when, pitches, duration, volume, slides) {\r\n\t\tvolume = this.limitVolume(volume);\r\n\t\tvolume = 1.5 * (volume || 1.0);\r\n\t\tduration = 0.05;\r\n\t\tthis.queueChord(audioContext, target, preset, when, pitches, duration, volume, slides);\r\n\t};\r\n\tthis.resumeContext = function (audioContext) {\r\n\t\ttry {\r\n\t\t\tif (audioContext.state == 'suspended') {\r\n\t\t\t\tif (audioContext.constructor.name == 'AudioContext') {\r\n\t\t\t\t\tconsole.log('audioContext.resume', audioContext);\r\n\t\t\t\t\taudioContext.resume();\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//skip\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\t//don't care\r\n\t\t}\r\n\t}\r\n\tthis.queueWaveTable = function (audioContext, target, preset, when, pitch, duration, volume, slides) {\r\n\t\tthis.resumeContext(audioContext);\r\n\t\tvolume = this.limitVolume(volume);\r\n\t\tvar zone = this.findZone(audioContext, preset, pitch);\r\n\t\tif (!(zone.buffer)) {\r\n\t\t\tconsole.log('empty buffer ', zone);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar baseDetune = zone.originalPitch - 100.0 * zone.coarseTune - zone.fineTune;\r\n\t\tvar playbackRate = 1.0 * Math.pow(2, (100.0 * pitch - baseDetune) / 1200.0);\r\n\t\tvar sampleRatio = zone.sampleRate / audioContext.sampleRate;\r\n\t\tvar startWhen = when;\r\n\t\tif (startWhen < audioContext.currentTime) {\r\n\t\t\tstartWhen = audioContext.currentTime;\r\n\t\t}\r\n\t\tvar waveDuration = duration + this.afterTime;\r\n\t\tvar loop = true;\r\n\t\tif (zone.loopStart < 1 || zone.loopStart >= zone.loopEnd) {\r\n\t\t\tloop = false;\r\n\t\t}\r\n\t\tif (!loop) {\r\n\t\t\tif (waveDuration > zone.buffer.duration / playbackRate) {\r\n\t\t\t\twaveDuration = zone.buffer.duration / playbackRate;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar envelope = this.findEnvelope(audioContext, target, startWhen, waveDuration);\r\n\t\tthis.setupEnvelope(audioContext, envelope, zone, volume, startWhen, waveDuration, duration);\r\n\t\tenvelope.audioBufferSourceNode = audioContext.createBufferSource();\r\n\t\tenvelope.audioBufferSourceNode.playbackRate.setValueAtTime(playbackRate, 0);\r\n\t\tif (slides) {\r\n\t\t\tif (slides.length > 0) {\r\n\t\t\t\tenvelope.audioBufferSourceNode.playbackRate.setValueAtTime(playbackRate, when);\r\n\t\t\t\tfor (var i = 0; i < slides.length; i++) {\r\n\t\t\t\t\tvar newPlaybackRate = 1.0 * Math.pow(2, (100.0 * slides[i].pitch - baseDetune) / 1200.0);\r\n\t\t\t\t\tvar newWhen = when + slides[i].when;\r\n\t\t\t\t\tenvelope.audioBufferSourceNode.playbackRate.linearRampToValueAtTime(newPlaybackRate, newWhen);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tenvelope.audioBufferSourceNode.buffer = zone.buffer;\r\n\t\tif (loop) {\r\n\t\t\tenvelope.audioBufferSourceNode.loop = true;\r\n\t\t\tenvelope.audioBufferSourceNode.loopStart = zone.loopStart / zone.sampleRate + zone.delay;\r\n\t\t\tenvelope.audioBufferSourceNode.loopEnd = zone.loopEnd / zone.sampleRate + zone.delay;\r\n\t\t} else {\r\n\t\t\tenvelope.audioBufferSourceNode.loop = false;\r\n\t\t}\r\n\t\tenvelope.audioBufferSourceNode.connect(envelope);\r\n\t\tenvelope.audioBufferSourceNode.start(startWhen, zone.delay);\r\n\t\tenvelope.audioBufferSourceNode.stop(startWhen + waveDuration);\r\n\t\tenvelope.when = startWhen;\r\n\t\tenvelope.duration = waveDuration;\r\n\t\tenvelope.pitch = pitch;\r\n\t\tenvelope.preset = preset;\r\n\t\treturn envelope;\r\n\t};\r\n\tthis.noZeroVolume = function (n) {\r\n\t\tif (n > this.nearZero) {\r\n\t\t\treturn n;\r\n\t\t} else {\r\n\t\t\treturn this.nearZero;\r\n\t\t}\r\n\t};\r\n\tthis.setupEnvelope = function (audioContext, envelope, zone, volume, when, sampleDuration, noteDuration) {\r\n\t\tenvelope.gain.setValueAtTime(this.noZeroVolume(0), audioContext.currentTime);\r\n\t\tvar lastTime = 0;\r\n\t\tvar lastVolume = 0;\r\n\t\tvar duration = noteDuration;\r\n\t\tvar ahdsr = zone.ahdsr;\r\n\t\tif (sampleDuration < duration + this.afterTime) {\r\n\t\t\tduration = sampleDuration - this.afterTime;\r\n\t\t}\r\n\t\tif (ahdsr) {\r\n\t\t\tif (!(ahdsr.length > 0)) {\r\n\t\t\t\tahdsr = [{\r\n\t\t\t\t\t\tduration: 0,\r\n\t\t\t\t\t\tvolume: 1\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\tduration: 0.5,\r\n\t\t\t\t\t\tvolume: 1\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\tduration: 1.5,\r\n\t\t\t\t\t\tvolume: 0.5\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\tduration: 3,\r\n\t\t\t\t\t\tvolume: 0\r\n\t\t\t\t\t}\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tahdsr = [{\r\n\t\t\t\t\tduration: 0,\r\n\t\t\t\t\tvolume: 1\r\n\t\t\t\t}, {\r\n\t\t\t\t\tduration: duration,\r\n\t\t\t\t\tvolume: 1\r\n\t\t\t\t}\r\n\t\t\t];\r\n\t\t}\r\n\t\tenvelope.gain.cancelScheduledValues(when);\r\n\t\tenvelope.gain.setValueAtTime(this.noZeroVolume(ahdsr[0].volume * volume), when);\r\n\t\tfor (var i = 0; i < ahdsr.length; i++) {\r\n\t\t\tif (ahdsr[i].duration > 0) {\r\n\t\t\t\tif (ahdsr[i].duration + lastTime > duration) {\r\n\t\t\t\t\tvar r = 1 - (ahdsr[i].duration + lastTime - duration) / ahdsr[i].duration;\r\n\t\t\t\t\tvar n = lastVolume - r * (lastVolume - ahdsr[i].volume);\r\n\t\t\t\t\tenvelope.gain.linearRampToValueAtTime(this.noZeroVolume(volume * n), when + duration);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tlastTime = lastTime + ahdsr[i].duration;\r\n\t\t\t\tlastVolume = ahdsr[i].volume;\r\n\t\t\t\tenvelope.gain.linearRampToValueAtTime(this.noZeroVolume(volume * lastVolume), when + lastTime);\r\n\t\t\t}\r\n\t\t}\r\n\t\tenvelope.gain.linearRampToValueAtTime(this.noZeroVolume(0), when + duration + this.afterTime);\r\n\t};\r\n\tthis.numValue = function (aValue, defValue) {\r\n\t\tif (typeof aValue === \"number\") {\r\n\t\t\treturn aValue;\r\n\t\t} else {\r\n\t\t\treturn defValue;\r\n\t\t}\r\n\t};\r\n\tthis.findEnvelope = function (audioContext, target, when, duration) {\r\n\t\tvar envelope = null;\r\n\t\tfor (var i = 0; i < this.envelopes.length; i++) {\r\n\t\t\tvar e = this.envelopes[i];\r\n\t\t\tif (e.target == target && audioContext.currentTime > e.when + e.duration + 0.001) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\te.audioBufferSourceNode.disconnect();\r\n\t\t\t\t\te.audioBufferSourceNode.stop(0);\r\n\t\t\t\t\te.audioBufferSourceNode = null;\r\n\t\t\t\t} catch (x) {\r\n\t\t\t\t\t//audioBufferSourceNode is dead already\r\n\t\t\t\t}\r\n\t\t\t\tenvelope = e;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!(envelope)) {\r\n\t\t\tenvelope = audioContext.createGain();\r\n\t\t\tenvelope.target = target;\r\n\t\t\tenvelope.connect(target);\r\n\t\t\tenvelope.cancel = function () {\r\n\t\t\t\tif (envelope.when + envelope.duration > audioContext.currentTime) {\r\n\t\t\t\t\tenvelope.gain.cancelScheduledValues(0);\r\n\t\t\t\t\tenvelope.gain.setTargetAtTime(0.00001, audioContext.currentTime, 0.1);\r\n\t\t\t\t\tenvelope.when = audioContext.currentTime + 0.00001;\r\n\t\t\t\t\tenvelope.duration = 0;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tthis.envelopes.push(envelope);\r\n\t\t}\r\n\t\treturn envelope;\r\n\t};\r\n\tthis.adjustPreset = function (audioContext, preset) {\r\n\t\tfor (var i = 0; i < preset.zones.length; i++) {\r\n\t\t\tthis.adjustZone(audioContext, preset.zones[i]);\r\n\t\t}\r\n\t};\r\n\tthis.adjustZone = function (audioContext, zone) {\r\n\t\tif (zone.buffer) {\r\n\t\t\t//\r\n\t\t} else {\r\n\t\t\tzone.delay = 0;\r\n\t\t\tif (zone.sample) {\r\n\t\t\t\tvar decoded = atob(zone.sample);\r\n\t\t\t\tzone.buffer = audioContext.createBuffer(1, decoded.length / 2, zone.sampleRate);\r\n\t\t\t\tvar float32Array = zone.buffer.getChannelData(0);\r\n\t\t\t\tvar b1,\r\n\t\t\t\tb2,\r\n\t\t\t\tn;\r\n\t\t\t\tfor (var i = 0; i < decoded.length / 2; i++) {\r\n\t\t\t\t\tb1 = decoded.charCodeAt(i * 2);\r\n\t\t\t\t\tb2 = decoded.charCodeAt(i * 2 + 1);\r\n\t\t\t\t\tif (b1 < 0) {\r\n\t\t\t\t\t\tb1 = 256 + b1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (b2 < 0) {\r\n\t\t\t\t\t\tb2 = 256 + b2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tn = b2 * 256 + b1;\r\n\t\t\t\t\tif (n >= 65536 / 2) {\r\n\t\t\t\t\t\tn = n - 65536;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfloat32Array[i] = n / 65536.0;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (zone.file) {\r\n\t\t\t\t\tvar datalen = zone.file.length;\r\n\t\t\t\t\tvar arraybuffer = new ArrayBuffer(datalen);\r\n\t\t\t\t\tvar view = new Uint8Array(arraybuffer);\r\n\t\t\t\t\tvar decoded = atob(zone.file);\r\n\t\t\t\t\tvar b;\r\n\t\t\t\t\tfor (var i = 0; i < decoded.length; i++) {\r\n\t\t\t\t\t\tb = decoded.charCodeAt(i);\r\n\t\t\t\t\t\tview[i] = b;\r\n\t\t\t\t\t}\r\n\t\t\t\t\taudioContext.decodeAudioData(arraybuffer, function (audioBuffer) {\r\n\t\t\t\t\t\tzone.buffer = audioBuffer;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tzone.loopStart = this.numValue(zone.loopStart, 0);\r\n\t\t\tzone.loopEnd = this.numValue(zone.loopEnd, 0);\r\n\t\t\tzone.coarseTune = this.numValue(zone.coarseTune, 0);\r\n\t\t\tzone.fineTune = this.numValue(zone.fineTune, 0);\r\n\t\t\tzone.originalPitch = this.numValue(zone.originalPitch, 6000);\r\n\t\t\tzone.sampleRate = this.numValue(zone.sampleRate, 44100);\r\n\t\t\tzone.sustain = this.numValue(zone.originalPitch, 0);\r\n\t\t}\r\n\t};\r\n\tthis.findZone = function (audioContext, preset, pitch) {\r\n\t\tvar zone = null;\r\n\t\tfor (var i = preset.zones.length - 1; i >= 0; i--) {\r\n\t\t\tzone = preset.zones[i];\r\n\t\t\tif (zone.keyRangeLow <= pitch && zone.keyRangeHigh + 1 >= pitch) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tthis.adjustZone(audioContext, zone);\r\n\t\t} catch (ex) {\r\n\t\t\tconsole.log('adjustZone', ex);\r\n\t\t}\r\n\t\treturn zone;\r\n\t};\r\n\tthis.cancelQueue = function (audioContext) {\r\n\t\tfor (var i = 0; i < this.envelopes.length; i++) {\r\n\t\t\tvar e = this.envelopes[i];\r\n\t\t\te.gain.cancelScheduledValues(0);\r\n\t\t\te.gain.setValueAtTime(this.nearZero, audioContext.currentTime);\r\n\t\t\te.when = -1;\r\n\t\t\ttry {\r\n\t\t\t\te.audioBufferSourceNode.disconnect();\r\n\t\t\t} catch (ex) {\r\n\t\t\t\tconsole.log(ex);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn this;\r\n}\r\nif (typeof module === 'object' && module.exports) {\r\n\tmodule.exports = WebAudioFontPlayer;\r\n}\r\nif (typeof window !== 'undefined') {\r\n\twindow.WebAudioFontPlayer = WebAudioFontPlayer;\r\n}\r\n"]},"metadata":{},"sourceType":"script"}